from cryptography.fernet import Fernet

class PasswordManager:
    def __init__(self):
        self.key = None  
        self.password_file = None
        self.password_dict = {}

    def create_key(self, path):
        self.key = Fernet.generate_key()
        with open(path, 'wb') as f:
            f.write(self.key)

    def load_key(self, path):
        with open(path, 'rb') as f:
            self.key = f.read()

    def create_password_file(self, path, initial_values=None):
        self.password_file = path
        if initial_values is not None:
            for key, value in initial_values.items():
                self.add_pass(key, value)

    def load_password_file(self, path):
        self.password_file = path
        with open(path, 'r') as f:
            for line in f:
                site, encrypted = line.strip().split(":")
                self.password_dict[site] = Fernet(self.key).decrypt(encrypted.encode()).decode()

    def add_pass(self, site, password):
        self.password_dict[site] = password
        if self.password_file is not None:
            with open(self.password_file, 'a+') as f:
                encrypted = Fernet(self.key).encrypt(password.encode())
                f.write(f"{site}:{encrypted.decode()}\n")

    def get_pass(self, site):
        return self.password_dict.get(site, "Site not found")  

def main():
    password = {
        "email": "Bruvh"
        
    }

    pm = PasswordManager()

    print("""
    ==== Password Manager ====
    1. Create Key
    2. Load Key
    3. Create Password File
    4. Load Password File
    5. Add Password
    6. Get Password
    q. Quit
    ==========================
    """)

    done = False
    while not done:
        choice = input("Enter choice: ").strip()
        if choice == "1":
            path = input("Enter path: ")
            pm.create_key(path)
        elif choice == "2":
            path = input("Enter path: ")
            pm.load_key(path)
        elif choice == "3":
            path = input("Enter path: ")
            pm.create_password_file(path, password)
        elif choice == "4":
            path = input("Enter path: ")
            pm.load_password_file(path)
        elif choice == "5":
            site = input("Enter site: ")
            password = input("Enter password: ")
            pm.add_pass(site, password)
        elif choice == "6":
            site = input("What site do you want the password for? ")
            print(f"Password for {site} is {pm.get_pass(site)}")
        elif choice == "q":
            done = True  
            print("Bye!")
        else:
            print("Invalid choice")

if __name__ == "__main__":
    main()
